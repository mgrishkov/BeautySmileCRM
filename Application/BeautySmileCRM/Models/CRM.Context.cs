//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BeautySmileCRM.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class CRMContext : DbContext
    {
    	public CRMContext()
            : base("name=CRMContext")
        {		
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new Exception("Code first changes are not allowed."); 
        }
    
        public virtual DbSet<Privilege> Privileges { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<AppointmentState> AppointmentStates { get; set; }
        public virtual DbSet<CumulativeDiscount> CumulativeDiscounts { get; set; }
        public virtual DbSet<DiscountType> DiscountTypes { get; set; }
        public virtual DbSet<PrivelegeGroup> PrivelegeGroups { get; set; }
        public virtual DbSet<TransactionType> TransactionTypes { get; set; }
        public virtual DbSet<Appointment> Appointments { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<DiscountCard> DiscountCards { get; set; }
        public virtual DbSet<FinancialTransaction> FinancialTransactions { get; set; }
        public virtual DbSet<Staff> Staffs { get; set; }
        public virtual DbSet<CustomerView> CustomerView { get; set; }
        public virtual DbSet<AppointmentView> AppointmentView { get; set; }
    
        public virtual ObjectResult<AppointmentDashboardData> GetAppointmentDashboardData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AppointmentDashboardData>("GetAppointmentDashboardData");
        }
    
        public virtual ObjectResult<CustomerDashboardData> GetCustomerDashboardData()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<CustomerDashboardData>("GetCustomerDashboardData");
        }
    }
}
